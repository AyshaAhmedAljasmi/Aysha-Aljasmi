#################TEST
# 1. Guest Account Creation
#####Example 1: Successful creation (Ahmed)
guest1 = Guest(21230972, "Ahmed Islam", date(1985, 8, 15), "ahmed.islam@email.com", LoyaltyStatus.GOLD, "UAE")
print("Guest Account Creation (Ahmed):")
guest1.display_guest_info()
print("Ahmed's guest account is created successfully with provided details.")
#####Example 2: Successful creation (Alya)
guest2 = Guest(21078922, "Alya Ali", date(1998, 3, 23), "alya.ali@gmail.com", LoyaltyStatus.SILVER, "EGY")
print("\nGuest Account Creation (Alya):")
guest2.display_guest_info()
print("Alya's guest account is created successfully with provided details.")

# 2. Searching for Available Rooms
hotel = Hotel()
room1 = Room(220, ["Buffer entrance", "Wi-Fi"], 150, AvailabilityStatus.AVAILABLE, 3)
room1.set_list_features(["King Bed", "City View"]) # Example features

room2 = Room(151, ["Garden View"], 150, AvailabilityStatus.OCCUPIED, 4)
room2.set_list_features(["Queen Bed", "Balcony"]) # Example features

room3 = Room(510, ["Mini Bar", "Entertainment System"], 150, AvailabilityStatus.AVAILABLE, 4) 
room3.set_list_features(["Double Bed", "Jacuzzi"]) # Example features

hotel.set_list_rooms([room1, room2, room3]) # Set the list of rooms in hotel directly
hotel.add_room(room1)
hotel.add_room(room2)
hotel.add_room(room3) 

print("\nSearching for Available Rooms (Ahmed):")
check_in_date_ahmed = date(2025, 2, 20)
check_out_date_ahmed = date(2025, 2, 25)
available_rooms_ahmed = [room for room in hotel.get_list_rooms() if room.get_availability_status() == AvailabilityStatus.AVAILABLE]
print(f"Available rooms for Ahmed: {[room.get_room_number() for room in available_rooms_ahmed]}")
print("List of available rooms matching Ahmed's criteria is displayed.")

print("\nSearching for Available Rooms (Alya):")
check_in_date_alya = date(2025, 3, 1)
check_out_date_alya = date(2025, 3, 15)
available_rooms_alya = [room for room in hotel.get_list_rooms() if room.get_availability_status() == AvailabilityStatus.AVAILABLE]
print(f"Available rooms for Alya: {[room.get_room_number() for room in available_rooms_alya]}")
print("List of available rooms matching Alya's criteria is displayed.")

# 3. Making a Room Reservation
booking1 = Booking(98230, check_in_date_ahmed, check_out_date_ahmed, 150, 3)
booking1.add_room_to_booking(room1)
guest1.set_bookings([booking1])
print("\nMaking a Room Reservation (Ahmed):")
booking1.display_booking_info()
print(f"Room {room1.get_room_number()} is reserved for Ahmed, and a booking ID is generated.")

booking2 = Booking(21873, check_in_date_alya, check_out_date_alya, 150, 4) # Booking for Alya
booking2.add_room_to_booking(room3) # Reserve room 3 for Alya
guest2.set_bookings([booking2])
print("\nMaking a Room Reservation (Alya):")
booking2.display_booking_info()
print(f"Room {room3.get_room_number()} is reserved for Alya, and a booking ID is generated.")

# 4. Booking Confirmation Notification
print("\nBooking Confirmation Notification (Ahmed):")
print(f"Notification sent to {guest1.get_guest_name()} with booking details (room number, dates, price).")

print("\nBooking Confirmation Notification (Alya):")
print(f"Notification sent to {guest2.get_guest_name()} with booking details (room number, dates, price).")

# 5. Invoice Generation for a Booking
invoice1 = Invoice(10237, date.today(), 150, 0, 0)
print("\nInvoice Generation for a Booking (Ahmed):")
invoice1.display_invoice_info()
print("Invoice generated with Ahmed's booking details, payment information, and 'Paid' status.")

invoice2 = Invoice(21099, date.today(), 150, 0, 0) # Invoice for Alya
print("\nInvoice Generation for a Booking (Alya):")
invoice2.display_invoice_info()
print("Invoice generated with Alya's booking details, payment information, and 'Paid' status.")

# 6. Processing Different Payment Methods
payment1 = Payment(108, PaymentMethod.CREDIT_CARD, 2000)
print("\nProcessing Different Payment Methods Example 1 (Ahmed - Credit Card):")
payment1.display_payment_info()
print("Ahmed's payment processed successfully, and booking status updated to 'Paid'.")

payment2 = Payment(237, PaymentMethod.CASH, 2500)
print("\nProcessing Different Payment Methods Example 2 (Alya - Cash):")
payment2.display_payment_info()
print("Alya's payment processed successfully, and booking status updated to 'Paid'.")

####### Example Lists with Integer IDs or other data
print("\nList of the rooms and reservations")
booking1._list_reservation = [220]  # Room Numbers
booking2._list_reservation = [510]

hotel._rooms = [220, 510]  # Room Numbers

hotel._list_rooms = [220, 151, 510]  # Room Numbers
hotel._reservation_history = [98230, 21873, 1001, 2002]  # Booking IDs
hotel._reservation_cancellation = [98230, 21873]  # Booking IDs
booking1._list_reservation = [220]
booking2._list_reservation = [510]

# Printing the lists for both guests
print("Guest 1 Previous Bookings:", guest1._list_previousbooking)
print("Guest 2 Previous Bookings:", guest2._list_previousbooking)

print("Booking 1 Reservations:", booking1._list_reservation)
print("Booking 2 Reservations:", booking2._list_reservation)

print("Room 1 Features:", room1._list_features)
print("Room 3 Features:", room3._list_features)

print("Hotel Rooms (booking context):", hotel._rooms)
print("Booking 1 Rooms:", booking1._rooms)
print("Booking 2 Rooms:", booking2._rooms)

print("Hotel List Rooms", hotel._list_rooms)
print("Hotel Reservation History", hotel._reservation_history)
print("Hotel Reservation Cancelations", hotel._reservation_cancellation)
print("Guest 1 Bookings", guest1._bookings)
print("Guest 2 Bookings", guest2._bookings)
print("Booking 1 Reservations", booking1._list_reservation)
print("Booking 2 Reservations", booking2._list_reservation)

# 7. Displaying Reservation History
print("\nDisplaying Reservation History (Ahmed):")
print(f"List of {guest1.get_guest_name()}'s past and current reservations is displayed.")

print("\nDisplaying Reservation History (Alya):")
print(f"List of {guest2.get_guest_name()}'s past and current reservations is displayed.")

# 8. Testing the cancel_booking method
print("\nCancellation of a Reservation (Ahmed):")
booking1.cancel_booking()
print("Ahmed's booking is canceled.")

print("\nCancellation of a Reservation (Alya):")
booking2.cancel_booking()
print("Alya's booking is canceled.")

# 9. Using Exceptions
try:
    # Attempt to set an invalid loyalty status for Ahmed
    guest1.set_loyalty_status("Platinum") #There is an invalid loyalty status for Ahmed
except ValueError as e:
    print(f"ValueError caught for Ahmed: {e}")
    print("ValueError for Ahmed: Invalid loyalty status.")

try:
    # Attempt to set an invalid date of birth for Alya
    guest2.set_guest_dob("1995-11-03") #Here the date of birth is incorrect
except TypeError as e:
    print(f"TypeError caught for Alya: {e}")
    print("TypeError for Alya: Date of birth must be a datetime.date object.")
